//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WSIParksuiteTest.StandardParkingWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TariffComputerWSSoap", Namespace="http://tempuri.org/")]
    public partial class TariffComputerWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckServiceJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithTimeStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithTimeStepsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithAmountStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithAmountStepsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUnParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUnParkingOperationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationGtechnaOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationGtechnaJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateLastParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateLastParkingOperationJSONOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TariffComputerWS() {
            this.Url = global::WSIParksuiteTest.Properties.Settings.Default.WSIParksuiteTest_StandardParkingWS_TariffComputerWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckServiceCompletedEventHandler CheckServiceCompleted;
        
        /// <remarks/>
        public event CheckServiceJSONCompletedEventHandler CheckServiceJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationCompletedEventHandler QueryParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationJSONCompletedEventHandler QueryParkingOperationJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithTimeStepsCompletedEventHandler QueryParkingOperationWithTimeStepsCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithTimeStepsJSONCompletedEventHandler QueryParkingOperationWithTimeStepsJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithAmountStepsCompletedEventHandler QueryParkingOperationWithAmountStepsCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithAmountStepsJSONCompletedEventHandler QueryParkingOperationWithAmountStepsJSONCompleted;
        
        /// <remarks/>
        public event QueryUnParkingOperationCompletedEventHandler QueryUnParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryUnParkingOperationJSONCompletedEventHandler QueryUnParkingOperationJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationInstallationTimeCompletedEventHandler InsertExternalParkingOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationInstallationTimeJSONCompletedEventHandler InsertExternalParkingOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationUTCTimeCompletedEventHandler InsertExternalParkingOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationUTCTimeJSONCompletedEventHandler InsertExternalParkingOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationInstallationTimeCompletedEventHandler InsertExternalUnParkingOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventHandler InsertExternalUnParkingOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationUTCTimeCompletedEventHandler InsertExternalUnParkingOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationUTCTimeJSONCompletedEventHandler InsertExternalUnParkingOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationGtechnaCompletedEventHandler InsertExternalParkingOperationGtechnaCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationGtechnaJSONCompletedEventHandler InsertExternalParkingOperationGtechnaJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationParkingmeterCompletedEventHandler InsertExternalParkingOperationParkingmeterCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationParkingmeterJSONCompletedEventHandler InsertExternalParkingOperationParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event QueryPlateLastParkingOperationCompletedEventHandler QueryPlateLastParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryPlateLastParkingOperationJSONCompletedEventHandler QueryPlateLastParkingOperationJSONCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckService() {
            object[] results = this.Invoke("CheckService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckServiceAsync() {
            this.CheckServiceAsync(null);
        }
        
        /// <remarks/>
        public void CheckServiceAsync(object userState) {
            if ((this.CheckServiceOperationCompleted == null)) {
                this.CheckServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckServiceOperationCompleted);
            }
            this.InvokeAsync("CheckService", new object[0], this.CheckServiceOperationCompleted, userState);
        }
        
        private void OnCheckServiceOperationCompleted(object arg) {
            if ((this.CheckServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckServiceCompleted(this, new CheckServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckServiceJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckServiceJSON() {
            object[] results = this.Invoke("CheckServiceJSON", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckServiceJSONAsync() {
            this.CheckServiceJSONAsync(null);
        }
        
        /// <remarks/>
        public void CheckServiceJSONAsync(object userState) {
            if ((this.CheckServiceJSONOperationCompleted == null)) {
                this.CheckServiceJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckServiceJSONOperationCompleted);
            }
            this.InvokeAsync("CheckServiceJSON", new object[0], this.CheckServiceJSONOperationCompleted, userState);
        }
        
        private void OnCheckServiceJSONOperationCompleted(object arg) {
            if ((this.CheckServiceJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckServiceJSONCompleted(this, new CheckServiceJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationAsync(string xmlIn) {
            this.QueryParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationOperationCompleted == null)) {
                this.QueryParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperation", new object[] {
                        xmlIn}, this.QueryParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationOperationCompleted(object arg) {
            if ((this.QueryParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationCompleted(this, new QueryParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationJSONAsync(string jsonIn) {
            this.QueryParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationJSONOperationCompleted == null)) {
                this.QueryParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationJSONCompleted(this, new QueryParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithTimeSteps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithTimeSteps(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperationWithTimeSteps", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsAsync(string xmlIn) {
            this.QueryParkingOperationWithTimeStepsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationWithTimeStepsOperationCompleted == null)) {
                this.QueryParkingOperationWithTimeStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithTimeStepsOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithTimeSteps", new object[] {
                        xmlIn}, this.QueryParkingOperationWithTimeStepsOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithTimeStepsOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithTimeStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithTimeStepsCompleted(this, new QueryParkingOperationWithTimeStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithTimeStepsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithTimeStepsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationWithTimeStepsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsJSONAsync(string jsonIn) {
            this.QueryParkingOperationWithTimeStepsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationWithTimeStepsJSONOperationCompleted == null)) {
                this.QueryParkingOperationWithTimeStepsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithTimeStepsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithTimeStepsJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationWithTimeStepsJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithTimeStepsJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithTimeStepsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithTimeStepsJSONCompleted(this, new QueryParkingOperationWithTimeStepsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithAmountSteps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithAmountSteps(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperationWithAmountSteps", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsAsync(string xmlIn) {
            this.QueryParkingOperationWithAmountStepsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationWithAmountStepsOperationCompleted == null)) {
                this.QueryParkingOperationWithAmountStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithAmountStepsOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithAmountSteps", new object[] {
                        xmlIn}, this.QueryParkingOperationWithAmountStepsOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithAmountStepsOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithAmountStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithAmountStepsCompleted(this, new QueryParkingOperationWithAmountStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithAmountStepsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithAmountStepsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationWithAmountStepsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsJSONAsync(string jsonIn) {
            this.QueryParkingOperationWithAmountStepsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationWithAmountStepsJSONOperationCompleted == null)) {
                this.QueryParkingOperationWithAmountStepsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithAmountStepsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithAmountStepsJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationWithAmountStepsJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithAmountStepsJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithAmountStepsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithAmountStepsJSONCompleted(this, new QueryParkingOperationWithAmountStepsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryUnParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUnParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryUnParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationAsync(string xmlIn) {
            this.QueryUnParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryUnParkingOperationOperationCompleted == null)) {
                this.QueryUnParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUnParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryUnParkingOperation", new object[] {
                        xmlIn}, this.QueryUnParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryUnParkingOperationOperationCompleted(object arg) {
            if ((this.QueryUnParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUnParkingOperationCompleted(this, new QueryUnParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryUnParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUnParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryUnParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationJSONAsync(string jsonIn) {
            this.QueryUnParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryUnParkingOperationJSONOperationCompleted == null)) {
                this.QueryUnParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUnParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryUnParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryUnParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryUnParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryUnParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUnParkingOperationJSONCompleted(this, new QueryUnParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalParkingOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalParkingOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationInstallationTimeCompleted(this, new InsertExternalParkingOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationInstallationTimeJSONCompleted(this, new InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalParkingOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalParkingOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationUTCTimeCompleted(this, new InsertExternalParkingOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationUTCTimeJSONCompleted(this, new InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalUnParkingOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationInstallationTimeCompleted(this, new InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalUnParkingOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationInstallationTimeJSONCompleted(this, new InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalUnParkingOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalUnParkingOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalUnParkingOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationUTCTimeCompleted(this, new InsertExternalUnParkingOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalUnParkingOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationUTCTimeJSONCompleted(this, new InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationGtechna", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationGtechna(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationGtechna", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaAsync(string xmlIn) {
            this.InsertExternalParkingOperationGtechnaAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationGtechnaOperationCompleted == null)) {
                this.InsertExternalParkingOperationGtechnaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationGtechnaOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationGtechna", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationGtechnaOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationGtechnaOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationGtechnaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationGtechnaCompleted(this, new InsertExternalParkingOperationGtechnaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationGtechnaJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationGtechnaJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationGtechnaJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationGtechnaJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationGtechnaJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationGtechnaJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationGtechnaJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationGtechnaJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationGtechnaJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationGtechnaJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationGtechnaJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationGtechnaJSONCompleted(this, new InsertExternalParkingOperationGtechnaJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationParkingmeter(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterAsync(string xmlIn) {
            this.InsertExternalParkingOperationParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationParkingmeterOperationCompleted == null)) {
                this.InsertExternalParkingOperationParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationParkingmeterOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationParkingmeter", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationParkingmeterOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationParkingmeterOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationParkingmeterCompleted(this, new InsertExternalParkingOperationParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationParkingmeterJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationParkingmeterJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationParkingmeterJSONCompleted(this, new InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateLastParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateLastParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryPlateLastParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationAsync(string xmlIn) {
            this.QueryPlateLastParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryPlateLastParkingOperationOperationCompleted == null)) {
                this.QueryPlateLastParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateLastParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryPlateLastParkingOperation", new object[] {
                        xmlIn}, this.QueryPlateLastParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryPlateLastParkingOperationOperationCompleted(object arg) {
            if ((this.QueryPlateLastParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateLastParkingOperationCompleted(this, new QueryPlateLastParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateLastParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateLastParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryPlateLastParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationJSONAsync(string jsonIn) {
            this.QueryPlateLastParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryPlateLastParkingOperationJSONOperationCompleted == null)) {
                this.QueryPlateLastParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateLastParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryPlateLastParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryPlateLastParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryPlateLastParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryPlateLastParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateLastParkingOperationJSONCompleted(this, new QueryPlateLastParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckServiceCompletedEventHandler(object sender, CheckServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckServiceJSONCompletedEventHandler(object sender, CheckServiceJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckServiceJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckServiceJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationCompletedEventHandler(object sender, QueryParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationJSONCompletedEventHandler(object sender, QueryParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationWithTimeStepsCompletedEventHandler(object sender, QueryParkingOperationWithTimeStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithTimeStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithTimeStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationWithTimeStepsJSONCompletedEventHandler(object sender, QueryParkingOperationWithTimeStepsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithTimeStepsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithTimeStepsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationWithAmountStepsCompletedEventHandler(object sender, QueryParkingOperationWithAmountStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithAmountStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithAmountStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryParkingOperationWithAmountStepsJSONCompletedEventHandler(object sender, QueryParkingOperationWithAmountStepsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithAmountStepsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithAmountStepsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryUnParkingOperationCompletedEventHandler(object sender, QueryUnParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUnParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUnParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryUnParkingOperationJSONCompletedEventHandler(object sender, QueryUnParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUnParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUnParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalParkingOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationUTCTimeCompletedEventHandler(object sender, InsertExternalParkingOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalUnParkingOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalUnParkingOperationUTCTimeCompletedEventHandler(object sender, InsertExternalUnParkingOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalUnParkingOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationGtechnaCompletedEventHandler(object sender, InsertExternalParkingOperationGtechnaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationGtechnaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationGtechnaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationGtechnaJSONCompletedEventHandler(object sender, InsertExternalParkingOperationGtechnaJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationGtechnaJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationGtechnaJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationParkingmeterCompletedEventHandler(object sender, InsertExternalParkingOperationParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void InsertExternalParkingOperationParkingmeterJSONCompletedEventHandler(object sender, InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryPlateLastParkingOperationCompletedEventHandler(object sender, QueryPlateLastParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateLastParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateLastParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void QueryPlateLastParkingOperationJSONCompletedEventHandler(object sender, QueryPlateLastParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateLastParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateLastParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591