//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18034.
// 
#pragma warning disable 1591

namespace NotificationsGenerator.NoficationWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="integraExternalServicesSoap", Namespace="http://tempuri.org/")]
    public partial class integraExternalServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendPushWPNotificationsToOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPushAndroidNotificationsToOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateMessageWithHashOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateMessageWithHashJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback CalculateHashOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public integraExternalServices() {
            this.Url = global::NotificationsGenerator.Properties.Settings.Default.NotificationsGenerator_NoficationWS_integraExternalServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendPushWPNotificationsToCompletedEventHandler SendPushWPNotificationsToCompleted;
        
        /// <remarks/>
        public event SendPushAndroidNotificationsToCompletedEventHandler SendPushAndroidNotificationsToCompleted;
        
        /// <remarks/>
        public event CalculateMessageWithHashCompletedEventHandler CalculateMessageWithHashCompleted;
        
        /// <remarks/>
        public event CalculateMessageWithHashJSONCompletedEventHandler CalculateMessageWithHashJSONCompleted;
        
        /// <remarks/>
        public event CalculateHashCompletedEventHandler CalculateHashCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPushWPNotificationsTo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendPushWPNotificationsTo(string strUser, string strToastText1, string strToastText2, string strToastParam, string strTileTitle, int iTileCount, string strBackgroundImage) {
            object[] results = this.Invoke("SendPushWPNotificationsTo", new object[] {
                        strUser,
                        strToastText1,
                        strToastText2,
                        strToastParam,
                        strTileTitle,
                        iTileCount,
                        strBackgroundImage});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendPushWPNotificationsToAsync(string strUser, string strToastText1, string strToastText2, string strToastParam, string strTileTitle, int iTileCount, string strBackgroundImage) {
            this.SendPushWPNotificationsToAsync(strUser, strToastText1, strToastText2, strToastParam, strTileTitle, iTileCount, strBackgroundImage, null);
        }
        
        /// <remarks/>
        public void SendPushWPNotificationsToAsync(string strUser, string strToastText1, string strToastText2, string strToastParam, string strTileTitle, int iTileCount, string strBackgroundImage, object userState) {
            if ((this.SendPushWPNotificationsToOperationCompleted == null)) {
                this.SendPushWPNotificationsToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPushWPNotificationsToOperationCompleted);
            }
            this.InvokeAsync("SendPushWPNotificationsTo", new object[] {
                        strUser,
                        strToastText1,
                        strToastText2,
                        strToastParam,
                        strTileTitle,
                        iTileCount,
                        strBackgroundImage}, this.SendPushWPNotificationsToOperationCompleted, userState);
        }
        
        private void OnSendPushWPNotificationsToOperationCompleted(object arg) {
            if ((this.SendPushWPNotificationsToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPushWPNotificationsToCompleted(this, new SendPushWPNotificationsToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendPushAndroidNotificationsTo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendPushAndroidNotificationsTo(string strUser, string strAndroidRawData) {
            object[] results = this.Invoke("SendPushAndroidNotificationsTo", new object[] {
                        strUser,
                        strAndroidRawData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendPushAndroidNotificationsToAsync(string strUser, string strAndroidRawData) {
            this.SendPushAndroidNotificationsToAsync(strUser, strAndroidRawData, null);
        }
        
        /// <remarks/>
        public void SendPushAndroidNotificationsToAsync(string strUser, string strAndroidRawData, object userState) {
            if ((this.SendPushAndroidNotificationsToOperationCompleted == null)) {
                this.SendPushAndroidNotificationsToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPushAndroidNotificationsToOperationCompleted);
            }
            this.InvokeAsync("SendPushAndroidNotificationsTo", new object[] {
                        strUser,
                        strAndroidRawData}, this.SendPushAndroidNotificationsToOperationCompleted, userState);
        }
        
        private void OnSendPushAndroidNotificationsToOperationCompleted(object arg) {
            if ((this.SendPushAndroidNotificationsToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPushAndroidNotificationsToCompleted(this, new SendPushAndroidNotificationsToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateMessageWithHash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateMessageWithHash(string xmlIn) {
            object[] results = this.Invoke("CalculateMessageWithHash", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateMessageWithHashAsync(string xmlIn) {
            this.CalculateMessageWithHashAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void CalculateMessageWithHashAsync(string xmlIn, object userState) {
            if ((this.CalculateMessageWithHashOperationCompleted == null)) {
                this.CalculateMessageWithHashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateMessageWithHashOperationCompleted);
            }
            this.InvokeAsync("CalculateMessageWithHash", new object[] {
                        xmlIn}, this.CalculateMessageWithHashOperationCompleted, userState);
        }
        
        private void OnCalculateMessageWithHashOperationCompleted(object arg) {
            if ((this.CalculateMessageWithHashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateMessageWithHashCompleted(this, new CalculateMessageWithHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateMessageWithHashJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateMessageWithHashJSON(string jsonIn) {
            object[] results = this.Invoke("CalculateMessageWithHashJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateMessageWithHashJSONAsync(string jsonIn) {
            this.CalculateMessageWithHashJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void CalculateMessageWithHashJSONAsync(string jsonIn, object userState) {
            if ((this.CalculateMessageWithHashJSONOperationCompleted == null)) {
                this.CalculateMessageWithHashJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateMessageWithHashJSONOperationCompleted);
            }
            this.InvokeAsync("CalculateMessageWithHashJSON", new object[] {
                        jsonIn}, this.CalculateMessageWithHashJSONOperationCompleted, userState);
        }
        
        private void OnCalculateMessageWithHashJSONOperationCompleted(object arg) {
            if ((this.CalculateMessageWithHashJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateMessageWithHashJSONCompleted(this, new CalculateMessageWithHashJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CalculateHash", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CalculateHash(string strInput, string strHash) {
            object[] results = this.Invoke("CalculateHash", new object[] {
                        strInput,
                        strHash});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CalculateHashAsync(string strInput, string strHash) {
            this.CalculateHashAsync(strInput, strHash, null);
        }
        
        /// <remarks/>
        public void CalculateHashAsync(string strInput, string strHash, object userState) {
            if ((this.CalculateHashOperationCompleted == null)) {
                this.CalculateHashOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateHashOperationCompleted);
            }
            this.InvokeAsync("CalculateHash", new object[] {
                        strInput,
                        strHash}, this.CalculateHashOperationCompleted, userState);
        }
        
        private void OnCalculateHashOperationCompleted(object arg) {
            if ((this.CalculateHashCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CalculateHashCompleted(this, new CalculateHashCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPushWPNotificationsToCompletedEventHandler(object sender, SendPushWPNotificationsToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPushWPNotificationsToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPushWPNotificationsToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SendPushAndroidNotificationsToCompletedEventHandler(object sender, SendPushAndroidNotificationsToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendPushAndroidNotificationsToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendPushAndroidNotificationsToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalculateMessageWithHashCompletedEventHandler(object sender, CalculateMessageWithHashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateMessageWithHashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateMessageWithHashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalculateMessageWithHashJSONCompletedEventHandler(object sender, CalculateMessageWithHashJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateMessageWithHashJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateMessageWithHashJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CalculateHashCompletedEventHandler(object sender, CalculateHashCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CalculateHashCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CalculateHashCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591