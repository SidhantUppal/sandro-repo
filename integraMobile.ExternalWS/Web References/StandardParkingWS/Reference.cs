//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace integraMobile.ExternalWS.StandardParkingWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TariffComputerWSSoap", Namespace="http://tempuri.org/")]
    public partial class TariffComputerWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckServiceJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAvailableTariffsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryAvailableTariffsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithTimeStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithTimeStepsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithAmountStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryParkingOperationWithAmountStepsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUnParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryUnParkingOperationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationGtechnaOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationGtechnaJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalPermitInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalPermitInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalSystemOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalSystemOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalSystemOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalSystemOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationParkingmeterOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalParkingOperationParkingmeterJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateLastParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateLastParkingOperationJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGroupLastParkingOperationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryGroupLastParkingOperationsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateHisOperationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryPlateHisOperationsJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOperationPlatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyOperationPlatesJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalCameraOperationInstallationTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalCameraOperationInstallationTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalCameraOperationUTCTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertExternalCameraOperationUTCTimeJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelParkingOperationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelParkingOperationJSONOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TariffComputerWS() {
            this.Url = global::integraMobile.ExternalWS.Properties.Settings.Default.integraMobile_ExternalWS_StandardParkingWS_TariffComputerWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckServiceCompletedEventHandler CheckServiceCompleted;
        
        /// <remarks/>
        public event CheckServiceJSONCompletedEventHandler CheckServiceJSONCompleted;
        
        /// <remarks/>
        public event QueryAvailableTariffsCompletedEventHandler QueryAvailableTariffsCompleted;
        
        /// <remarks/>
        public event QueryAvailableTariffsJSONCompletedEventHandler QueryAvailableTariffsJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationCompletedEventHandler QueryParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationJSONCompletedEventHandler QueryParkingOperationJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithTimeStepsCompletedEventHandler QueryParkingOperationWithTimeStepsCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithTimeStepsJSONCompletedEventHandler QueryParkingOperationWithTimeStepsJSONCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithAmountStepsCompletedEventHandler QueryParkingOperationWithAmountStepsCompleted;
        
        /// <remarks/>
        public event QueryParkingOperationWithAmountStepsJSONCompletedEventHandler QueryParkingOperationWithAmountStepsJSONCompleted;
        
        /// <remarks/>
        public event QueryUnParkingOperationCompletedEventHandler QueryUnParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryUnParkingOperationJSONCompletedEventHandler QueryUnParkingOperationJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationInstallationTimeCompletedEventHandler InsertExternalParkingOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationInstallationTimeJSONCompletedEventHandler InsertExternalParkingOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationUTCTimeCompletedEventHandler InsertExternalParkingOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationUTCTimeJSONCompletedEventHandler InsertExternalParkingOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationInstallationTimeCompletedEventHandler InsertExternalUnParkingOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventHandler InsertExternalUnParkingOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationUTCTimeCompletedEventHandler InsertExternalUnParkingOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalUnParkingOperationUTCTimeJSONCompletedEventHandler InsertExternalUnParkingOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationGtechnaCompletedEventHandler InsertExternalParkingOperationGtechnaCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationGtechnaJSONCompletedEventHandler InsertExternalParkingOperationGtechnaJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalPermitInstallationTimeCompletedEventHandler InsertExternalPermitInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalPermitInstallationTimeJSONCompletedEventHandler InsertExternalPermitInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalSystemOperationUTCTimeCompletedEventHandler InsertExternalSystemOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalSystemOperationUTCTimeJSONCompletedEventHandler InsertExternalSystemOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalSystemOperationInstallationTimeCompletedEventHandler InsertExternalSystemOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalSystemOperationInstallationTimeJSONCompletedEventHandler InsertExternalSystemOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationParkingmeterCompletedEventHandler InsertExternalParkingOperationParkingmeterCompleted;
        
        /// <remarks/>
        public event InsertExternalParkingOperationParkingmeterJSONCompletedEventHandler InsertExternalParkingOperationParkingmeterJSONCompleted;
        
        /// <remarks/>
        public event QueryPlateLastParkingOperationCompletedEventHandler QueryPlateLastParkingOperationCompleted;
        
        /// <remarks/>
        public event QueryPlateLastParkingOperationJSONCompletedEventHandler QueryPlateLastParkingOperationJSONCompleted;
        
        /// <remarks/>
        public event QueryGroupLastParkingOperationsCompletedEventHandler QueryGroupLastParkingOperationsCompleted;
        
        /// <remarks/>
        public event QueryGroupLastParkingOperationsJSONCompletedEventHandler QueryGroupLastParkingOperationsJSONCompleted;
        
        /// <remarks/>
        public event QueryPlateHisOperationsCompletedEventHandler QueryPlateHisOperationsCompleted;
        
        /// <remarks/>
        public event QueryPlateHisOperationsJSONCompletedEventHandler QueryPlateHisOperationsJSONCompleted;
        
        /// <remarks/>
        public event ModifyOperationPlatesCompletedEventHandler ModifyOperationPlatesCompleted;
        
        /// <remarks/>
        public event ModifyOperationPlatesJSONCompletedEventHandler ModifyOperationPlatesJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalCameraOperationInstallationTimeCompletedEventHandler InsertExternalCameraOperationInstallationTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalCameraOperationInstallationTimeJSONCompletedEventHandler InsertExternalCameraOperationInstallationTimeJSONCompleted;
        
        /// <remarks/>
        public event InsertExternalCameraOperationUTCTimeCompletedEventHandler InsertExternalCameraOperationUTCTimeCompleted;
        
        /// <remarks/>
        public event InsertExternalCameraOperationUTCTimeJSONCompletedEventHandler InsertExternalCameraOperationUTCTimeJSONCompleted;
        
        /// <remarks/>
        public event CancelParkingOperationCompletedEventHandler CancelParkingOperationCompleted;
        
        /// <remarks/>
        public event CancelParkingOperationJSONCompletedEventHandler CancelParkingOperationJSONCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckService() {
            object[] results = this.Invoke("CheckService", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckServiceAsync() {
            this.CheckServiceAsync(null);
        }
        
        /// <remarks/>
        public void CheckServiceAsync(object userState) {
            if ((this.CheckServiceOperationCompleted == null)) {
                this.CheckServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckServiceOperationCompleted);
            }
            this.InvokeAsync("CheckService", new object[0], this.CheckServiceOperationCompleted, userState);
        }
        
        private void OnCheckServiceOperationCompleted(object arg) {
            if ((this.CheckServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckServiceCompleted(this, new CheckServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckServiceJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckServiceJSON() {
            object[] results = this.Invoke("CheckServiceJSON", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckServiceJSONAsync() {
            this.CheckServiceJSONAsync(null);
        }
        
        /// <remarks/>
        public void CheckServiceJSONAsync(object userState) {
            if ((this.CheckServiceJSONOperationCompleted == null)) {
                this.CheckServiceJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckServiceJSONOperationCompleted);
            }
            this.InvokeAsync("CheckServiceJSON", new object[0], this.CheckServiceJSONOperationCompleted, userState);
        }
        
        private void OnCheckServiceJSONOperationCompleted(object arg) {
            if ((this.CheckServiceJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckServiceJSONCompleted(this, new CheckServiceJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAvailableTariffs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryAvailableTariffs(string xmlIn) {
            object[] results = this.Invoke("QueryAvailableTariffs", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAvailableTariffsAsync(string xmlIn) {
            this.QueryAvailableTariffsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryAvailableTariffsAsync(string xmlIn, object userState) {
            if ((this.QueryAvailableTariffsOperationCompleted == null)) {
                this.QueryAvailableTariffsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAvailableTariffsOperationCompleted);
            }
            this.InvokeAsync("QueryAvailableTariffs", new object[] {
                        xmlIn}, this.QueryAvailableTariffsOperationCompleted, userState);
        }
        
        private void OnQueryAvailableTariffsOperationCompleted(object arg) {
            if ((this.QueryAvailableTariffsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAvailableTariffsCompleted(this, new QueryAvailableTariffsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryAvailableTariffsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryAvailableTariffsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryAvailableTariffsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAvailableTariffsJSONAsync(string jsonIn) {
            this.QueryAvailableTariffsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryAvailableTariffsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryAvailableTariffsJSONOperationCompleted == null)) {
                this.QueryAvailableTariffsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryAvailableTariffsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryAvailableTariffsJSON", new object[] {
                        jsonIn}, this.QueryAvailableTariffsJSONOperationCompleted, userState);
        }
        
        private void OnQueryAvailableTariffsJSONOperationCompleted(object arg) {
            if ((this.QueryAvailableTariffsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryAvailableTariffsJSONCompleted(this, new QueryAvailableTariffsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationAsync(string xmlIn) {
            this.QueryParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationOperationCompleted == null)) {
                this.QueryParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperation", new object[] {
                        xmlIn}, this.QueryParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationOperationCompleted(object arg) {
            if ((this.QueryParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationCompleted(this, new QueryParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationJSONAsync(string jsonIn) {
            this.QueryParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationJSONOperationCompleted == null)) {
                this.QueryParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationJSONCompleted(this, new QueryParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithTimeSteps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithTimeSteps(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperationWithTimeSteps", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsAsync(string xmlIn) {
            this.QueryParkingOperationWithTimeStepsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationWithTimeStepsOperationCompleted == null)) {
                this.QueryParkingOperationWithTimeStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithTimeStepsOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithTimeSteps", new object[] {
                        xmlIn}, this.QueryParkingOperationWithTimeStepsOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithTimeStepsOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithTimeStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithTimeStepsCompleted(this, new QueryParkingOperationWithTimeStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithTimeStepsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithTimeStepsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationWithTimeStepsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsJSONAsync(string jsonIn) {
            this.QueryParkingOperationWithTimeStepsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithTimeStepsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationWithTimeStepsJSONOperationCompleted == null)) {
                this.QueryParkingOperationWithTimeStepsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithTimeStepsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithTimeStepsJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationWithTimeStepsJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithTimeStepsJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithTimeStepsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithTimeStepsJSONCompleted(this, new QueryParkingOperationWithTimeStepsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithAmountSteps", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithAmountSteps(string xmlIn) {
            object[] results = this.Invoke("QueryParkingOperationWithAmountSteps", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsAsync(string xmlIn) {
            this.QueryParkingOperationWithAmountStepsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsAsync(string xmlIn, object userState) {
            if ((this.QueryParkingOperationWithAmountStepsOperationCompleted == null)) {
                this.QueryParkingOperationWithAmountStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithAmountStepsOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithAmountSteps", new object[] {
                        xmlIn}, this.QueryParkingOperationWithAmountStepsOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithAmountStepsOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithAmountStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithAmountStepsCompleted(this, new QueryParkingOperationWithAmountStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryParkingOperationWithAmountStepsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryParkingOperationWithAmountStepsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryParkingOperationWithAmountStepsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsJSONAsync(string jsonIn) {
            this.QueryParkingOperationWithAmountStepsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryParkingOperationWithAmountStepsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryParkingOperationWithAmountStepsJSONOperationCompleted == null)) {
                this.QueryParkingOperationWithAmountStepsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryParkingOperationWithAmountStepsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryParkingOperationWithAmountStepsJSON", new object[] {
                        jsonIn}, this.QueryParkingOperationWithAmountStepsJSONOperationCompleted, userState);
        }
        
        private void OnQueryParkingOperationWithAmountStepsJSONOperationCompleted(object arg) {
            if ((this.QueryParkingOperationWithAmountStepsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryParkingOperationWithAmountStepsJSONCompleted(this, new QueryParkingOperationWithAmountStepsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryUnParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUnParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryUnParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationAsync(string xmlIn) {
            this.QueryUnParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryUnParkingOperationOperationCompleted == null)) {
                this.QueryUnParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUnParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryUnParkingOperation", new object[] {
                        xmlIn}, this.QueryUnParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryUnParkingOperationOperationCompleted(object arg) {
            if ((this.QueryUnParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUnParkingOperationCompleted(this, new QueryUnParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryUnParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryUnParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryUnParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationJSONAsync(string jsonIn) {
            this.QueryUnParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryUnParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryUnParkingOperationJSONOperationCompleted == null)) {
                this.QueryUnParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryUnParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryUnParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryUnParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryUnParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryUnParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryUnParkingOperationJSONCompleted(this, new QueryUnParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalParkingOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalParkingOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationInstallationTimeCompleted(this, new InsertExternalParkingOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationInstallationTimeJSONCompleted(this, new InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalParkingOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalParkingOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationUTCTimeCompleted(this, new InsertExternalParkingOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationUTCTimeJSONCompleted(this, new InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalUnParkingOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalUnParkingOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationInstallationTimeCompleted(this, new InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalUnParkingOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationInstallationTimeJSONCompleted(this, new InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalUnParkingOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalUnParkingOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalUnParkingOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationUTCTimeCompleted(this, new InsertExternalUnParkingOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalUnParkingOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalUnParkingOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalUnParkingOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalUnParkingOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalUnParkingOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalUnParkingOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalUnParkingOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalUnParkingOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalUnParkingOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalUnParkingOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalUnParkingOperationUTCTimeJSONCompleted(this, new InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationGtechna", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationGtechna(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationGtechna", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaAsync(string xmlIn) {
            this.InsertExternalParkingOperationGtechnaAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationGtechnaOperationCompleted == null)) {
                this.InsertExternalParkingOperationGtechnaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationGtechnaOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationGtechna", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationGtechnaOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationGtechnaOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationGtechnaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationGtechnaCompleted(this, new InsertExternalParkingOperationGtechnaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationGtechnaJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationGtechnaJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationGtechnaJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationGtechnaJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationGtechnaJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationGtechnaJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationGtechnaJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationGtechnaJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationGtechnaJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationGtechnaJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationGtechnaJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationGtechnaJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationGtechnaJSONCompleted(this, new InsertExternalParkingOperationGtechnaJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalPermitInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalPermitInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalPermitInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalPermitInstallationTimeAsync(string xmlIn) {
            this.InsertExternalPermitInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalPermitInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalPermitInstallationTimeOperationCompleted == null)) {
                this.InsertExternalPermitInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalPermitInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalPermitInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalPermitInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalPermitInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalPermitInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalPermitInstallationTimeCompleted(this, new InsertExternalPermitInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalPermitInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalPermitInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalPermitInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalPermitInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalPermitInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalPermitInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalPermitInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalPermitInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalPermitInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalPermitInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalPermitInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalPermitInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalPermitInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalPermitInstallationTimeJSONCompleted(this, new InsertExternalPermitInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalSystemOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalSystemOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalSystemOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalSystemOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalSystemOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalSystemOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalSystemOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalSystemOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalSystemOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalSystemOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalSystemOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalSystemOperationUTCTimeCompleted(this, new InsertExternalSystemOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalSystemOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalSystemOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalSystemOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalSystemOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalSystemOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalSystemOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalSystemOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalSystemOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalSystemOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalSystemOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalSystemOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalSystemOperationUTCTimeJSONCompleted(this, new InsertExternalSystemOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalSystemOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalSystemOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalSystemOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalSystemOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalSystemOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalSystemOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalSystemOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalSystemOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalSystemOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalSystemOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalSystemOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalSystemOperationInstallationTimeCompleted(this, new InsertExternalSystemOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalSystemOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalSystemOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalSystemOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalSystemOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalSystemOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalSystemOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalSystemOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalSystemOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalSystemOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalSystemOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalSystemOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalSystemOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalSystemOperationInstallationTimeJSONCompleted(this, new InsertExternalSystemOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationParkingmeter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationParkingmeter(string xmlIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationParkingmeter", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterAsync(string xmlIn) {
            this.InsertExternalParkingOperationParkingmeterAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterAsync(string xmlIn, object userState) {
            if ((this.InsertExternalParkingOperationParkingmeterOperationCompleted == null)) {
                this.InsertExternalParkingOperationParkingmeterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationParkingmeterOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationParkingmeter", new object[] {
                        xmlIn}, this.InsertExternalParkingOperationParkingmeterOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationParkingmeterOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationParkingmeterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationParkingmeterCompleted(this, new InsertExternalParkingOperationParkingmeterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalParkingOperationParkingmeterJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalParkingOperationParkingmeterJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalParkingOperationParkingmeterJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterJSONAsync(string jsonIn) {
            this.InsertExternalParkingOperationParkingmeterJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalParkingOperationParkingmeterJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted == null)) {
                this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalParkingOperationParkingmeterJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalParkingOperationParkingmeterJSON", new object[] {
                        jsonIn}, this.InsertExternalParkingOperationParkingmeterJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalParkingOperationParkingmeterJSONOperationCompleted(object arg) {
            if ((this.InsertExternalParkingOperationParkingmeterJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalParkingOperationParkingmeterJSONCompleted(this, new InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateLastParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateLastParkingOperation(string xmlIn) {
            object[] results = this.Invoke("QueryPlateLastParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationAsync(string xmlIn) {
            this.QueryPlateLastParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationAsync(string xmlIn, object userState) {
            if ((this.QueryPlateLastParkingOperationOperationCompleted == null)) {
                this.QueryPlateLastParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateLastParkingOperationOperationCompleted);
            }
            this.InvokeAsync("QueryPlateLastParkingOperation", new object[] {
                        xmlIn}, this.QueryPlateLastParkingOperationOperationCompleted, userState);
        }
        
        private void OnQueryPlateLastParkingOperationOperationCompleted(object arg) {
            if ((this.QueryPlateLastParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateLastParkingOperationCompleted(this, new QueryPlateLastParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateLastParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateLastParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("QueryPlateLastParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationJSONAsync(string jsonIn) {
            this.QueryPlateLastParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateLastParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.QueryPlateLastParkingOperationJSONOperationCompleted == null)) {
                this.QueryPlateLastParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateLastParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("QueryPlateLastParkingOperationJSON", new object[] {
                        jsonIn}, this.QueryPlateLastParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnQueryPlateLastParkingOperationJSONOperationCompleted(object arg) {
            if ((this.QueryPlateLastParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateLastParkingOperationJSONCompleted(this, new QueryPlateLastParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryGroupLastParkingOperations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryGroupLastParkingOperations(string xmlIn) {
            object[] results = this.Invoke("QueryGroupLastParkingOperations", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGroupLastParkingOperationsAsync(string xmlIn) {
            this.QueryGroupLastParkingOperationsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryGroupLastParkingOperationsAsync(string xmlIn, object userState) {
            if ((this.QueryGroupLastParkingOperationsOperationCompleted == null)) {
                this.QueryGroupLastParkingOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGroupLastParkingOperationsOperationCompleted);
            }
            this.InvokeAsync("QueryGroupLastParkingOperations", new object[] {
                        xmlIn}, this.QueryGroupLastParkingOperationsOperationCompleted, userState);
        }
        
        private void OnQueryGroupLastParkingOperationsOperationCompleted(object arg) {
            if ((this.QueryGroupLastParkingOperationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGroupLastParkingOperationsCompleted(this, new QueryGroupLastParkingOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryGroupLastParkingOperationsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryGroupLastParkingOperationsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryGroupLastParkingOperationsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryGroupLastParkingOperationsJSONAsync(string jsonIn) {
            this.QueryGroupLastParkingOperationsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryGroupLastParkingOperationsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryGroupLastParkingOperationsJSONOperationCompleted == null)) {
                this.QueryGroupLastParkingOperationsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryGroupLastParkingOperationsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryGroupLastParkingOperationsJSON", new object[] {
                        jsonIn}, this.QueryGroupLastParkingOperationsJSONOperationCompleted, userState);
        }
        
        private void OnQueryGroupLastParkingOperationsJSONOperationCompleted(object arg) {
            if ((this.QueryGroupLastParkingOperationsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryGroupLastParkingOperationsJSONCompleted(this, new QueryGroupLastParkingOperationsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateHisOperations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateHisOperations(string xmlIn) {
            object[] results = this.Invoke("QueryPlateHisOperations", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateHisOperationsAsync(string xmlIn) {
            this.QueryPlateHisOperationsAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateHisOperationsAsync(string xmlIn, object userState) {
            if ((this.QueryPlateHisOperationsOperationCompleted == null)) {
                this.QueryPlateHisOperationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateHisOperationsOperationCompleted);
            }
            this.InvokeAsync("QueryPlateHisOperations", new object[] {
                        xmlIn}, this.QueryPlateHisOperationsOperationCompleted, userState);
        }
        
        private void OnQueryPlateHisOperationsOperationCompleted(object arg) {
            if ((this.QueryPlateHisOperationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateHisOperationsCompleted(this, new QueryPlateHisOperationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryPlateHisOperationsJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string QueryPlateHisOperationsJSON(string jsonIn) {
            object[] results = this.Invoke("QueryPlateHisOperationsJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryPlateHisOperationsJSONAsync(string jsonIn) {
            this.QueryPlateHisOperationsJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void QueryPlateHisOperationsJSONAsync(string jsonIn, object userState) {
            if ((this.QueryPlateHisOperationsJSONOperationCompleted == null)) {
                this.QueryPlateHisOperationsJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPlateHisOperationsJSONOperationCompleted);
            }
            this.InvokeAsync("QueryPlateHisOperationsJSON", new object[] {
                        jsonIn}, this.QueryPlateHisOperationsJSONOperationCompleted, userState);
        }
        
        private void OnQueryPlateHisOperationsJSONOperationCompleted(object arg) {
            if ((this.QueryPlateHisOperationsJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPlateHisOperationsJSONCompleted(this, new QueryPlateHisOperationsJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyOperationPlates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyOperationPlates(string xmlIn) {
            object[] results = this.Invoke("ModifyOperationPlates", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOperationPlatesAsync(string xmlIn) {
            this.ModifyOperationPlatesAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void ModifyOperationPlatesAsync(string xmlIn, object userState) {
            if ((this.ModifyOperationPlatesOperationCompleted == null)) {
                this.ModifyOperationPlatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOperationPlatesOperationCompleted);
            }
            this.InvokeAsync("ModifyOperationPlates", new object[] {
                        xmlIn}, this.ModifyOperationPlatesOperationCompleted, userState);
        }
        
        private void OnModifyOperationPlatesOperationCompleted(object arg) {
            if ((this.ModifyOperationPlatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOperationPlatesCompleted(this, new ModifyOperationPlatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyOperationPlatesJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyOperationPlatesJSON(string jsonIn) {
            object[] results = this.Invoke("ModifyOperationPlatesJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyOperationPlatesJSONAsync(string jsonIn) {
            this.ModifyOperationPlatesJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void ModifyOperationPlatesJSONAsync(string jsonIn, object userState) {
            if ((this.ModifyOperationPlatesJSONOperationCompleted == null)) {
                this.ModifyOperationPlatesJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyOperationPlatesJSONOperationCompleted);
            }
            this.InvokeAsync("ModifyOperationPlatesJSON", new object[] {
                        jsonIn}, this.ModifyOperationPlatesJSONOperationCompleted, userState);
        }
        
        private void OnModifyOperationPlatesJSONOperationCompleted(object arg) {
            if ((this.ModifyOperationPlatesJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyOperationPlatesJSONCompleted(this, new ModifyOperationPlatesJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalCameraOperationInstallationTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalCameraOperationInstallationTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalCameraOperationInstallationTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationInstallationTimeAsync(string xmlIn) {
            this.InsertExternalCameraOperationInstallationTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationInstallationTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalCameraOperationInstallationTimeOperationCompleted == null)) {
                this.InsertExternalCameraOperationInstallationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalCameraOperationInstallationTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalCameraOperationInstallationTime", new object[] {
                        xmlIn}, this.InsertExternalCameraOperationInstallationTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalCameraOperationInstallationTimeOperationCompleted(object arg) {
            if ((this.InsertExternalCameraOperationInstallationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalCameraOperationInstallationTimeCompleted(this, new InsertExternalCameraOperationInstallationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalCameraOperationInstallationTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalCameraOperationInstallationTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalCameraOperationInstallationTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationInstallationTimeJSONAsync(string jsonIn) {
            this.InsertExternalCameraOperationInstallationTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationInstallationTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalCameraOperationInstallationTimeJSONOperationCompleted == null)) {
                this.InsertExternalCameraOperationInstallationTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalCameraOperationInstallationTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalCameraOperationInstallationTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalCameraOperationInstallationTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalCameraOperationInstallationTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalCameraOperationInstallationTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalCameraOperationInstallationTimeJSONCompleted(this, new InsertExternalCameraOperationInstallationTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalCameraOperationUTCTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalCameraOperationUTCTime(string xmlIn) {
            object[] results = this.Invoke("InsertExternalCameraOperationUTCTime", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationUTCTimeAsync(string xmlIn) {
            this.InsertExternalCameraOperationUTCTimeAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationUTCTimeAsync(string xmlIn, object userState) {
            if ((this.InsertExternalCameraOperationUTCTimeOperationCompleted == null)) {
                this.InsertExternalCameraOperationUTCTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalCameraOperationUTCTimeOperationCompleted);
            }
            this.InvokeAsync("InsertExternalCameraOperationUTCTime", new object[] {
                        xmlIn}, this.InsertExternalCameraOperationUTCTimeOperationCompleted, userState);
        }
        
        private void OnInsertExternalCameraOperationUTCTimeOperationCompleted(object arg) {
            if ((this.InsertExternalCameraOperationUTCTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalCameraOperationUTCTimeCompleted(this, new InsertExternalCameraOperationUTCTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertExternalCameraOperationUTCTimeJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertExternalCameraOperationUTCTimeJSON(string jsonIn) {
            object[] results = this.Invoke("InsertExternalCameraOperationUTCTimeJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationUTCTimeJSONAsync(string jsonIn) {
            this.InsertExternalCameraOperationUTCTimeJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void InsertExternalCameraOperationUTCTimeJSONAsync(string jsonIn, object userState) {
            if ((this.InsertExternalCameraOperationUTCTimeJSONOperationCompleted == null)) {
                this.InsertExternalCameraOperationUTCTimeJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertExternalCameraOperationUTCTimeJSONOperationCompleted);
            }
            this.InvokeAsync("InsertExternalCameraOperationUTCTimeJSON", new object[] {
                        jsonIn}, this.InsertExternalCameraOperationUTCTimeJSONOperationCompleted, userState);
        }
        
        private void OnInsertExternalCameraOperationUTCTimeJSONOperationCompleted(object arg) {
            if ((this.InsertExternalCameraOperationUTCTimeJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertExternalCameraOperationUTCTimeJSONCompleted(this, new InsertExternalCameraOperationUTCTimeJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelParkingOperation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelParkingOperation(string xmlIn) {
            object[] results = this.Invoke("CancelParkingOperation", new object[] {
                        xmlIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelParkingOperationAsync(string xmlIn) {
            this.CancelParkingOperationAsync(xmlIn, null);
        }
        
        /// <remarks/>
        public void CancelParkingOperationAsync(string xmlIn, object userState) {
            if ((this.CancelParkingOperationOperationCompleted == null)) {
                this.CancelParkingOperationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelParkingOperationOperationCompleted);
            }
            this.InvokeAsync("CancelParkingOperation", new object[] {
                        xmlIn}, this.CancelParkingOperationOperationCompleted, userState);
        }
        
        private void OnCancelParkingOperationOperationCompleted(object arg) {
            if ((this.CancelParkingOperationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelParkingOperationCompleted(this, new CancelParkingOperationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelParkingOperationJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelParkingOperationJSON(string jsonIn) {
            object[] results = this.Invoke("CancelParkingOperationJSON", new object[] {
                        jsonIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelParkingOperationJSONAsync(string jsonIn) {
            this.CancelParkingOperationJSONAsync(jsonIn, null);
        }
        
        /// <remarks/>
        public void CancelParkingOperationJSONAsync(string jsonIn, object userState) {
            if ((this.CancelParkingOperationJSONOperationCompleted == null)) {
                this.CancelParkingOperationJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelParkingOperationJSONOperationCompleted);
            }
            this.InvokeAsync("CancelParkingOperationJSON", new object[] {
                        jsonIn}, this.CancelParkingOperationJSONOperationCompleted, userState);
        }
        
        private void OnCancelParkingOperationJSONOperationCompleted(object arg) {
            if ((this.CancelParkingOperationJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelParkingOperationJSONCompleted(this, new CancelParkingOperationJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckServiceCompletedEventHandler(object sender, CheckServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CheckServiceJSONCompletedEventHandler(object sender, CheckServiceJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckServiceJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckServiceJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryAvailableTariffsCompletedEventHandler(object sender, QueryAvailableTariffsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAvailableTariffsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAvailableTariffsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryAvailableTariffsJSONCompletedEventHandler(object sender, QueryAvailableTariffsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryAvailableTariffsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryAvailableTariffsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationCompletedEventHandler(object sender, QueryParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationJSONCompletedEventHandler(object sender, QueryParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationWithTimeStepsCompletedEventHandler(object sender, QueryParkingOperationWithTimeStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithTimeStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithTimeStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationWithTimeStepsJSONCompletedEventHandler(object sender, QueryParkingOperationWithTimeStepsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithTimeStepsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithTimeStepsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationWithAmountStepsCompletedEventHandler(object sender, QueryParkingOperationWithAmountStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithAmountStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithAmountStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryParkingOperationWithAmountStepsJSONCompletedEventHandler(object sender, QueryParkingOperationWithAmountStepsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryParkingOperationWithAmountStepsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryParkingOperationWithAmountStepsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryUnParkingOperationCompletedEventHandler(object sender, QueryUnParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUnParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUnParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryUnParkingOperationJSONCompletedEventHandler(object sender, QueryUnParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryUnParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryUnParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalParkingOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationUTCTimeCompletedEventHandler(object sender, InsertExternalParkingOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalUnParkingOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalUnParkingOperationUTCTimeCompletedEventHandler(object sender, InsertExternalUnParkingOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalUnParkingOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalUnParkingOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationGtechnaCompletedEventHandler(object sender, InsertExternalParkingOperationGtechnaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationGtechnaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationGtechnaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationGtechnaJSONCompletedEventHandler(object sender, InsertExternalParkingOperationGtechnaJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationGtechnaJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationGtechnaJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalPermitInstallationTimeCompletedEventHandler(object sender, InsertExternalPermitInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalPermitInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalPermitInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalPermitInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalPermitInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalPermitInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalPermitInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalSystemOperationUTCTimeCompletedEventHandler(object sender, InsertExternalSystemOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalSystemOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalSystemOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalSystemOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalSystemOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalSystemOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalSystemOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalSystemOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalSystemOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalSystemOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalSystemOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalSystemOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalSystemOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalSystemOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalSystemOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationParkingmeterCompletedEventHandler(object sender, InsertExternalParkingOperationParkingmeterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationParkingmeterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationParkingmeterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalParkingOperationParkingmeterJSONCompletedEventHandler(object sender, InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalParkingOperationParkingmeterJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryPlateLastParkingOperationCompletedEventHandler(object sender, QueryPlateLastParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateLastParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateLastParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryPlateLastParkingOperationJSONCompletedEventHandler(object sender, QueryPlateLastParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateLastParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateLastParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryGroupLastParkingOperationsCompletedEventHandler(object sender, QueryGroupLastParkingOperationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGroupLastParkingOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGroupLastParkingOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryGroupLastParkingOperationsJSONCompletedEventHandler(object sender, QueryGroupLastParkingOperationsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryGroupLastParkingOperationsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryGroupLastParkingOperationsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryPlateHisOperationsCompletedEventHandler(object sender, QueryPlateHisOperationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateHisOperationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateHisOperationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void QueryPlateHisOperationsJSONCompletedEventHandler(object sender, QueryPlateHisOperationsJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPlateHisOperationsJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryPlateHisOperationsJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyOperationPlatesCompletedEventHandler(object sender, ModifyOperationPlatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOperationPlatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOperationPlatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ModifyOperationPlatesJSONCompletedEventHandler(object sender, ModifyOperationPlatesJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyOperationPlatesJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyOperationPlatesJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalCameraOperationInstallationTimeCompletedEventHandler(object sender, InsertExternalCameraOperationInstallationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalCameraOperationInstallationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalCameraOperationInstallationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalCameraOperationInstallationTimeJSONCompletedEventHandler(object sender, InsertExternalCameraOperationInstallationTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalCameraOperationInstallationTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalCameraOperationInstallationTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalCameraOperationUTCTimeCompletedEventHandler(object sender, InsertExternalCameraOperationUTCTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalCameraOperationUTCTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalCameraOperationUTCTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertExternalCameraOperationUTCTimeJSONCompletedEventHandler(object sender, InsertExternalCameraOperationUTCTimeJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertExternalCameraOperationUTCTimeJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertExternalCameraOperationUTCTimeJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelParkingOperationCompletedEventHandler(object sender, CancelParkingOperationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelParkingOperationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelParkingOperationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CancelParkingOperationJSONCompletedEventHandler(object sender, CancelParkingOperationJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelParkingOperationJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelParkingOperationJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591