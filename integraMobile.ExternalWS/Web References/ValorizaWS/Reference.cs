//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace integraMobile.ExternalWS.ValorizaWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://10.100.254.101")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertarAnulacionOperationCompleted;
        
        private System.Threading.SendOrPostCallback SolicitudDenunciasOperationCompleted;
        
        private System.Threading.SendOrPostCallback SolicitudDenunciasPorExpedienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SolicitudTicketCGSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::integraMobile.ExternalWS.Properties.Settings.Default.integraMobile_ExternalWS_ValorizaWS_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertarAnulacionCompletedEventHandler InsertarAnulacionCompleted;
        
        /// <remarks/>
        public event SolicitudDenunciasCompletedEventHandler SolicitudDenunciasCompleted;
        
        /// <remarks/>
        public event SolicitudDenunciasPorExpedienteCompletedEventHandler SolicitudDenunciasPorExpedienteCompleted;
        
        /// <remarks/>
        public event SolicitudTicketCGSCompletedEventHandler SolicitudTicketCGSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.100.254.101/InsertarAnulacion", RequestNamespace="http://10.100.254.101", ResponseNamespace="http://10.100.254.101", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InsertarAnulacion(string usuario, string pass, int municipio, string idVSM) {
            object[] results = this.Invoke("InsertarAnulacion", new object[] {
                        usuario,
                        pass,
                        municipio,
                        idVSM});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InsertarAnulacionAsync(string usuario, string pass, int municipio, string idVSM) {
            this.InsertarAnulacionAsync(usuario, pass, municipio, idVSM, null);
        }
        
        /// <remarks/>
        public void InsertarAnulacionAsync(string usuario, string pass, int municipio, string idVSM, object userState) {
            if ((this.InsertarAnulacionOperationCompleted == null)) {
                this.InsertarAnulacionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarAnulacionOperationCompleted);
            }
            this.InvokeAsync("InsertarAnulacion", new object[] {
                        usuario,
                        pass,
                        municipio,
                        idVSM}, this.InsertarAnulacionOperationCompleted, userState);
        }
        
        private void OnInsertarAnulacionOperationCompleted(object arg) {
            if ((this.InsertarAnulacionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarAnulacionCompleted(this, new InsertarAnulacionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.100.254.101/SolicitudDenuncias", RequestNamespace="http://10.100.254.101", ResponseNamespace="http://10.100.254.101", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SolicitudDenuncias(string usuario, string pass, string matricula, int municipio) {
            object[] results = this.Invoke("SolicitudDenuncias", new object[] {
                        usuario,
                        pass,
                        matricula,
                        municipio});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitudDenunciasAsync(string usuario, string pass, string matricula, int municipio) {
            this.SolicitudDenunciasAsync(usuario, pass, matricula, municipio, null);
        }
        
        /// <remarks/>
        public void SolicitudDenunciasAsync(string usuario, string pass, string matricula, int municipio, object userState) {
            if ((this.SolicitudDenunciasOperationCompleted == null)) {
                this.SolicitudDenunciasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitudDenunciasOperationCompleted);
            }
            this.InvokeAsync("SolicitudDenuncias", new object[] {
                        usuario,
                        pass,
                        matricula,
                        municipio}, this.SolicitudDenunciasOperationCompleted, userState);
        }
        
        private void OnSolicitudDenunciasOperationCompleted(object arg) {
            if ((this.SolicitudDenunciasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitudDenunciasCompleted(this, new SolicitudDenunciasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.100.254.101/SolicitudDenunciasPorExpediente", RequestNamespace="http://10.100.254.101", ResponseNamespace="http://10.100.254.101", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SolicitudDenunciasPorExpediente(string usuario, string pass, string expediente, int municipio) {
            object[] results = this.Invoke("SolicitudDenunciasPorExpediente", new object[] {
                        usuario,
                        pass,
                        expediente,
                        municipio});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitudDenunciasPorExpedienteAsync(string usuario, string pass, string expediente, int municipio) {
            this.SolicitudDenunciasPorExpedienteAsync(usuario, pass, expediente, municipio, null);
        }
        
        /// <remarks/>
        public void SolicitudDenunciasPorExpedienteAsync(string usuario, string pass, string expediente, int municipio, object userState) {
            if ((this.SolicitudDenunciasPorExpedienteOperationCompleted == null)) {
                this.SolicitudDenunciasPorExpedienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitudDenunciasPorExpedienteOperationCompleted);
            }
            this.InvokeAsync("SolicitudDenunciasPorExpediente", new object[] {
                        usuario,
                        pass,
                        expediente,
                        municipio}, this.SolicitudDenunciasPorExpedienteOperationCompleted, userState);
        }
        
        private void OnSolicitudDenunciasPorExpedienteOperationCompleted(object arg) {
            if ((this.SolicitudDenunciasPorExpedienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitudDenunciasPorExpedienteCompleted(this, new SolicitudDenunciasPorExpedienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://10.100.254.101/SolicitudTicketCGS", RequestNamespace="http://10.100.254.101", ResponseNamespace="http://10.100.254.101", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode SolicitudTicketCGS(string matricula, string zona, int municipio, int idusuario, int idruta) {
            object[] results = this.Invoke("SolicitudTicketCGS", new object[] {
                        matricula,
                        zona,
                        municipio,
                        idusuario,
                        idruta});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void SolicitudTicketCGSAsync(string matricula, string zona, int municipio, int idusuario, int idruta) {
            this.SolicitudTicketCGSAsync(matricula, zona, municipio, idusuario, idruta, null);
        }
        
        /// <remarks/>
        public void SolicitudTicketCGSAsync(string matricula, string zona, int municipio, int idusuario, int idruta, object userState) {
            if ((this.SolicitudTicketCGSOperationCompleted == null)) {
                this.SolicitudTicketCGSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSolicitudTicketCGSOperationCompleted);
            }
            this.InvokeAsync("SolicitudTicketCGS", new object[] {
                        matricula,
                        zona,
                        municipio,
                        idusuario,
                        idruta}, this.SolicitudTicketCGSOperationCompleted, userState);
        }
        
        private void OnSolicitudTicketCGSOperationCompleted(object arg) {
            if ((this.SolicitudTicketCGSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SolicitudTicketCGSCompleted(this, new SolicitudTicketCGSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertarAnulacionCompletedEventHandler(object sender, InsertarAnulacionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertarAnulacionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertarAnulacionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SolicitudDenunciasCompletedEventHandler(object sender, SolicitudDenunciasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SolicitudDenunciasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SolicitudDenunciasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SolicitudDenunciasPorExpedienteCompletedEventHandler(object sender, SolicitudDenunciasPorExpedienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SolicitudDenunciasPorExpedienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SolicitudDenunciasPorExpedienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SolicitudTicketCGSCompletedEventHandler(object sender, SolicitudTicketCGSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SolicitudTicketCGSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SolicitudTicketCGSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591