/* To prevent any potential data loss issues, you should review this script in detail before running it outside the context of the database designer.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.HIS_OPERATIONS ADD
	OPE_PERMIT_LAST_AUTORENEWAL_DATE datetime NULL,
	OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES int NULL,
	OPE_PERMIT_LAST_AUTORENEWAL_STATUS int NULL
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal Date'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'HIS_OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_DATE'
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal num Retries'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'HIS_OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES'
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal Status'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'HIS_OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_STATUS'
GO
ALTER TABLE dbo.HIS_OPERATIONS ADD CONSTRAINT
	DF_HIS_OPERATIONS_OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES DEFAULT 0 FOR OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES
GO
ALTER TABLE dbo.HIS_OPERATIONS SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.OPERATIONS ADD
	OPE_PERMIT_LAST_AUTORENEWAL_DATE datetime NULL,
	OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES int NULL,
	OPE_PERMIT_LAST_AUTORENEWAL_STATUS int NULL
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal Date'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_DATE'
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal num Retries'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES'
GO
DECLARE @v sql_variant 
SET @v = N'Permit Last Autorenewal Status'
EXECUTE sp_addextendedproperty N'MS_Description', @v, N'SCHEMA', N'dbo', N'TABLE', N'OPERATIONS', N'COLUMN', N'OPE_PERMIT_LAST_AUTORENEWAL_STATUS'
GO
ALTER TABLE dbo.OPERATIONS SET (LOCK_ESCALATION = TABLE)
GO
COMMIT


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER TRIGGER [dbo].[TR_OPERATIONS]
   ON [dbo].[OPERATIONS]
   AFTER INSERT,UPDATE
AS 
BEGIN
-- SET NOCOUNT ON added to prevent extra result sets from
-- interfering with SELECT statements.
SET NOCOUNT ON;

DECLARE @CountInserted int
DECLARE @CountDeleted int

SELECT @CountInserted = COUNT(*) FROM Inserted
SELECT @CountDeleted = COUNT(*) FROM Deleted

IF @CountInserted > 0 AND @CountDeleted > 0
BEGIN


UPDATE HIS_OPERATIONS SET
  OPE_USR_ID = i.OPE_USR_ID,
  OPE_MOSE_OS = i.OPE_MOSE_OS,
  OPE_USRP_ID  = i.OPE_USRP_ID ,
  OPE_INS_ID = i.OPE_INS_ID,
  OPE_TYPE = i.OPE_TYPE,
  OPE_GRP_ID = i.OPE_GRP_ID,
  OPE_TAR_ID = i.OPE_TAR_ID,
  OPE_DATE = i.OPE_DATE,
  OPE_INIDATE = i.OPE_INIDATE,
  OPE_ENDDATE = i.OPE_ENDDATE,
  OPE_UTC_DATE = i.OPE_UTC_DATE,
  OPE_UTC_INIDATE = i.OPE_UTC_INIDATE,
  OPE_UTC_ENDDATE = i.OPE_UTC_ENDDATE,
  OPE_DATE_UTC_OFFSET = i.OPE_DATE_UTC_OFFSET,
  OPE_INIDATE_UTC_OFFSET = i.OPE_INIDATE_UTC_OFFSET,
  OPE_ENDDATE_UTC_OFFSET = i.OPE_ENDDATE_UTC_OFFSET,
  OPE_AMOUNT = i.OPE_AMOUNT,
  OPE_TIME = i.OPE_TIME,
  OPE_AMOUNT_CUR_ID = i.OPE_AMOUNT_CUR_ID,
  OPE_BALANCE_CUR_ID = i.OPE_BALANCE_CUR_ID,
  OPE_CHANGE_APPLIED = i.OPE_CHANGE_APPLIED,
  OPE_CHANGE_FEE_APPLIED = i.OPE_CHANGE_FEE_APPLIED,
  OPE_FINAL_AMOUNT = i.OPE_FINAL_AMOUNT,
  OPE_EXTERNAL_ID1 = i.OPE_EXTERNAL_ID1,
  OPE_EXTERNAL_ID2 = i.OPE_EXTERNAL_ID2,
  OPE_EXTERNAL_ID3 = i.OPE_EXTERNAL_ID3,
  OPE_INSERTION_UTC_DATE = i.OPE_INSERTION_UTC_DATE,
  OPE_CUSPMR_ID = i.OPE_CUSPMR_ID,
  OPE_OPEDIS_ID = i.OPE_OPEDIS_ID,
  OPE_BALANCE_BEFORE = i.OPE_BALANCE_BEFORE,
  OPE_SUSCRIPTION_TYPE = i.OPE_SUSCRIPTION_TYPE,
  OPE_CONFIRMED_IN_WS1 = i.OPE_CONFIRMED_IN_WS1,
  OPE_CONFIRMED_IN_WS2 = i.OPE_CONFIRMED_IN_WS2,
  OPE_CONFIRMED_IN_WS3 = i.OPE_CONFIRMED_IN_WS3,
  OPE_CONFIRM_IN_WS1_RETRIES_NUM = i.OPE_CONFIRM_IN_WS1_RETRIES_NUM,
  OPE_CONFIRM_IN_WS2_RETRIES_NUM = i.OPE_CONFIRM_IN_WS2_RETRIES_NUM,
  OPE_CONFIRM_IN_WS3_RETRIES_NUM = i.OPE_CONFIRM_IN_WS3_RETRIES_NUM,
  OPE_CONFIRM_IN_WS1_DATE = i.OPE_CONFIRM_IN_WS1_DATE,
  OPE_CONFIRM_IN_WS2_DATE = i.OPE_CONFIRM_IN_WS2_DATE,
  OPE_CONFIRM_IN_WS3_DATE = i.OPE_CONFIRM_IN_WS3_DATE,
  OPE_MOSE_ID = i.OPE_MOSE_ID,  
  OPE_LATITUDE = i.OPE_LATITUDE,
  OPE_LONGITUDE = i.OPE_LONGITUDE,
  OPE_APP_VERSION = i.OPE_APP_VERSION,
  OPE_CONFIRMATION_TIME_IN_WS1 = i.OPE_CONFIRMATION_TIME_IN_WS1,
  OPE_CONFIRMATION_TIME_IN_WS2 = i.OPE_CONFIRMATION_TIME_IN_WS2,
  OPE_CONFIRMATION_TIME_IN_WS3 = i.OPE_CONFIRMATION_TIME_IN_WS3,
  OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS1 = i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS1,
  OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS2 = i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS2,
  OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS3 = i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS3,  
  OPE_PERC_VAT1 =  i.OPE_PERC_VAT1,
  OPE_PERC_VAT2 =  i.OPE_PERC_VAT2,
  OPE_PARTIAL_VAT1 = i.OPE_PARTIAL_VAT1,
  OPE_PERC_FEE = i.OPE_PERC_FEE,
  OPE_PERC_FEE_TOPPED = i.OPE_PERC_FEE_TOPPED,
  OPE_PARTIAL_PERC_FEE = i.OPE_PARTIAL_PERC_FEE,
  OPE_FIXED_FEE = i.OPE_FIXED_FEE,
  OPE_PARTIAL_FIXED_FEE = i.OPE_PARTIAL_FIXED_FEE,  
  OPE_PERC_BONUS = i.OPE_PERC_BONUS,
  OPE_PARTIAL_BONUS_FEE = i.OPE_PARTIAL_BONUS_FEE,
  OPE_TOTAL_AMOUNT = i.OPE_TOTAL_AMOUNT,
  OPE_CUSINV_ID  = i.OPE_CUSINV_ID ,
  OPE_BONUS_ID = i.OPE_BONUS_ID,
  OPE_BONUS_MARCA = i.OPE_BONUS_MARCA,
  OPE_BONUS_TYPE = i.OPE_BONUS_TYPE,
  OPE_SPACE_STRING = i.OPE_SPACE_STRING,
  OPE_TIME_BALANCE_USED = i.OPE_TIME_BALANCE_USED,
  OPE_TIME_BALANCE_BEFORE =i.OPE_TIME_BALANCE_BEFORE,
  OPE_REAL_AMOUNT = i.OPE_REAL_AMOUNT,
  OPE_POSTPAY = i.OPE_POSTPAY,
  OPE_REFUND_PREVIOUS_ENDDATE = i.OPE_REFUND_PREVIOUS_ENDDATE,
  OPE_SHOPKEEPER_OP = i.OPE_SHOPKEEPER_OP,
  OPE_SHOPKEEPER_AMOUNT = i.OPE_SHOPKEEPER_AMOUNT,
  OPE_SHOPKEEPER_PROFIT = i.OPE_SHOPKEEPER_PROFIT,
  OPE_AUTH_ID = i.OPE_AUTH_ID,
  OPE_AMOUNT_WITHOUT_BON = i.OPE_AMOUNT_WITHOUT_BON,
  OPE_BON_MLT = i.OPE_BON_MLT,
  OPE_VEHICLE_TYPE = i.OPE_VEHICLE_TYPE,
  OPE_BACKOFFICE_USR = i.OPE_BACKOFFICE_USR,
  OPE_STOP_DATE = i.OPE_STOP_DATE,
  OPE_UTC_STOP_DATE = i.OPE_UTC_STOP_DATE,
  OPE_PARKING_MODE = i.OPE_PARKING_MODE,
  OPE_PARKING_MODE_STATUS = i.OPE_PARKING_MODE_STATUS,
  OPE_EXTERNAL_BASE_ID1 = i.OPE_EXTERNAL_BASE_ID1,
  OPE_EXTERNAL_BASE_ID2 = i.OPE_EXTERNAL_BASE_ID2,
  OPE_EXTERNAL_BASE_ID3 = i.OPE_EXTERNAL_BASE_ID3,
  OPE_PERMIT_AUTO_RENEW = i.OPE_PERMIT_AUTO_RENEW,
  OPE_PERMIT_EXPIRATION_TIME = i.OPE_PERMIT_EXPIRATION_TIME,
  OPE_PERMIT_LAST_AUTORENEWAL_DATE = i.OPE_PERMIT_LAST_AUTORENEWAL_DATE,
  OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES = i.OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES,
  OPE_PERMIT_LAST_AUTORENEWAL_STATUS = i.OPE_PERMIT_LAST_AUTORENEWAL_STATUS
  FROM HIS_OPERATIONS h INNER JOIN Deleted d on h.OPE_ID=d.OPE_ID JOIN Inserted i ON h.OPE_ID = i.OPE_ID;

   IF @@ERROR != 0
 ROLLBACK TRAN


END

IF @CountInserted > 0
BEGIN




INSERT INTO HIS_OPERATIONS (OPE_ID,OPE_USR_ID,OPE_MOSE_OS,OPE_USRP_ID ,OPE_INS_ID,OPE_TYPE,OPE_GRP_ID,OPE_TAR_ID,OPE_DATE ,
						OPE_INIDATE,OPE_ENDDATE,OPE_UTC_DATE,OPE_UTC_INIDATE,OPE_UTC_ENDDATE,OPE_DATE_UTC_OFFSET,OPE_INIDATE_UTC_OFFSET,
						OPE_ENDDATE_UTC_OFFSET,OPE_AMOUNT,OPE_TIME,OPE_AMOUNT_CUR_ID,OPE_BALANCE_CUR_ID,OPE_CHANGE_APPLIED,
						OPE_CHANGE_FEE_APPLIED,OPE_FINAL_AMOUNT,OPE_EXTERNAL_ID1,OPE_EXTERNAL_ID2,OPE_EXTERNAL_ID3,
						OPE_INSERTION_UTC_DATE,OPE_CUSPMR_ID,OPE_OPEDIS_ID,OPE_BALANCE_BEFORE,OPE_SUSCRIPTION_TYPE,OPE_CONFIRMED_IN_WS1,
						OPE_CONFIRMED_IN_WS2,OPE_CONFIRMED_IN_WS3,OPE_CONFIRM_IN_WS1_RETRIES_NUM,OPE_CONFIRM_IN_WS2_RETRIES_NUM,
						OPE_CONFIRM_IN_WS3_RETRIES_NUM,OPE_CONFIRM_IN_WS1_DATE,OPE_CONFIRM_IN_WS2_DATE,OPE_CONFIRM_IN_WS3_DATE,
						OPE_MOSE_ID,OPE_LATITUDE,OPE_LONGITUDE,OPE_APP_VERSION,OPE_CONFIRMATION_TIME_IN_WS1,OPE_CONFIRMATION_TIME_IN_WS2,
						OPE_CONFIRMATION_TIME_IN_WS3,OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS1,OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS2,
						OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS3,OPE_PERC_VAT1,OPE_PERC_VAT2,OPE_PARTIAL_VAT1,OPE_PERC_FEE,OPE_PERC_FEE_TOPPED,
						OPE_PARTIAL_PERC_FEE,OPE_FIXED_FEE,OPE_PARTIAL_FIXED_FEE,OPE_PERC_BONUS,OPE_PARTIAL_BONUS_FEE,OPE_TOTAL_AMOUNT,
						OPE_CUSINV_ID,OPE_BONUS_ID, OPE_BONUS_MARCA, OPE_BONUS_TYPE, OPE_SPACE_STRING, OPE_TIME_BALANCE_USED, OPE_TIME_BALANCE_BEFORE,
						OPE_REAL_AMOUNT, OPE_POSTPAY, OPE_REFUND_PREVIOUS_ENDDATE, OPE_SHOPKEEPER_OP, OPE_SHOPKEEPER_AMOUNT, OPE_SHOPKEEPER_PROFIT,
						OPE_AMOUNT_WITHOUT_BON, OPE_BON_MLT, OPE_AUTH_ID, OPE_VEHICLE_TYPE, OPE_BACKOFFICE_USR,
						OPE_STOP_DATE, OPE_UTC_STOP_DATE, OPE_PARKING_MODE, OPE_PARKING_MODE_STATUS,
						OPE_EXTERNAL_BASE_ID1, OPE_EXTERNAL_BASE_ID2, OPE_EXTERNAL_BASE_ID3, OPE_PERMIT_AUTO_RENEW, OPE_PERMIT_EXPIRATION_TIME, 
						OPE_PERMIT_LAST_AUTORENEWAL_DATE, OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES, OPE_PERMIT_LAST_AUTORENEWAL_STATUS)
  SELECT i.OPE_ID,i.OPE_USR_ID,i.OPE_MOSE_OS,i.OPE_USRP_ID ,i.OPE_INS_ID,i.OPE_TYPE,i.OPE_GRP_ID,i.OPE_TAR_ID,i.OPE_DATE ,
	i.OPE_INIDATE,i.OPE_ENDDATE,i.OPE_UTC_DATE,i.OPE_UTC_INIDATE,i.OPE_UTC_ENDDATE,i.OPE_DATE_UTC_OFFSET,i.OPE_INIDATE_UTC_OFFSET,
	i.OPE_ENDDATE_UTC_OFFSET,i.OPE_AMOUNT,i.OPE_TIME,i.OPE_AMOUNT_CUR_ID,i.OPE_BALANCE_CUR_ID,i.OPE_CHANGE_APPLIED,
	i.OPE_CHANGE_FEE_APPLIED,i.OPE_FINAL_AMOUNT,i.OPE_EXTERNAL_ID1,i.OPE_EXTERNAL_ID2,i.OPE_EXTERNAL_ID3,
	i.OPE_INSERTION_UTC_DATE,i.OPE_CUSPMR_ID,i.OPE_OPEDIS_ID,i.OPE_BALANCE_BEFORE,i.OPE_SUSCRIPTION_TYPE,i.OPE_CONFIRMED_IN_WS1,
	i.OPE_CONFIRMED_IN_WS2,i.OPE_CONFIRMED_IN_WS3,i.OPE_CONFIRM_IN_WS1_RETRIES_NUM,i.OPE_CONFIRM_IN_WS2_RETRIES_NUM,
	i.OPE_CONFIRM_IN_WS3_RETRIES_NUM,i.OPE_CONFIRM_IN_WS1_DATE,i.OPE_CONFIRM_IN_WS2_DATE,i.OPE_CONFIRM_IN_WS3_DATE,
	i.OPE_MOSE_ID,i.OPE_LATITUDE,i.OPE_LONGITUDE,i.OPE_APP_VERSION,i.OPE_CONFIRMATION_TIME_IN_WS1,i.OPE_CONFIRMATION_TIME_IN_WS2,
	i.OPE_CONFIRMATION_TIME_IN_WS3,i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS1,i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS2,
	i.OPE_QUEUE_LENGTH_BEFORE_CONFIRM_WS3,i.OPE_PERC_VAT1,i.OPE_PERC_VAT2,i.OPE_PARTIAL_VAT1,i.OPE_PERC_FEE,i.OPE_PERC_FEE_TOPPED,
	i.OPE_PARTIAL_PERC_FEE,i.OPE_FIXED_FEE,i.OPE_PARTIAL_FIXED_FEE,i.OPE_PERC_BONUS,i.OPE_PARTIAL_BONUS_FEE,i.OPE_TOTAL_AMOUNT,
	i.OPE_CUSINV_ID,i.OPE_BONUS_ID, i.OPE_BONUS_MARCA, i.OPE_BONUS_TYPE , i.OPE_SPACE_STRING,i.OPE_TIME_BALANCE_USED, i.OPE_TIME_BALANCE_BEFORE,
	i.OPE_REAL_AMOUNT, i.OPE_POSTPAY, i.OPE_REFUND_PREVIOUS_ENDDATE, i.OPE_SHOPKEEPER_OP, i.OPE_SHOPKEEPER_AMOUNT, i.OPE_SHOPKEEPER_PROFIT,
	i.OPE_AMOUNT_WITHOUT_BON, i.OPE_BON_MLT, i.OPE_AUTH_ID, i.OPE_VEHICLE_TYPE, i.OPE_BACKOFFICE_USR,
	i.OPE_STOP_DATE, i.OPE_UTC_STOP_DATE, i.OPE_PARKING_MODE, i.OPE_PARKING_MODE_STATUS,
	i.OPE_EXTERNAL_BASE_ID1, i.OPE_EXTERNAL_BASE_ID2, i.OPE_EXTERNAL_BASE_ID3,  i.OPE_PERMIT_AUTO_RENEW, i.OPE_PERMIT_EXPIRATION_TIME,
	i.OPE_PERMIT_LAST_AUTORENEWAL_DATE, i.OPE_PERMIT_LAST_AUTORENEWAL_NUM_RETRIES, i.OPE_PERMIT_LAST_AUTORENEWAL_STATUS
  FROM Inserted i
  where i.OPE_ID not in (select d.OPE_ID from Deleted d);

   IF @@ERROR != 0
 ROLLBACK TRAN
END

END


