<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmAutomaticRecharge_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Credit Added Automatically</value>
  </data>
  <data name="ConfirmNoAutomaticRecharge_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Credit Added</value>
  </data>
  <data name="ConfirmParking_EmailBody" xml:space="preserve">
    <value>ID: {0}&lt;br&gt;License Plate: {1}&lt;br&gt;City: {2}&lt;br&gt;Zone: {3}&lt;br&gt;Rate: {4}&lt;br&gt;Date: {5:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Parking Starts:  {6:HH:mm:ss dd/MM/yyyy}&lt;br&gt;&lt;b&gt;Parking Ends:  {7:HH:mm:ss dd/MM/yyyy}&lt;/b&gt;&lt;br&gt;Amount Paid: {8}&lt;br&gt;{9}&lt;br&gt;&lt;br&gt;&lt;a href="{10}"&gt;&lt;img src="{11}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ConfirmParking_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Vehicle Parked</value>
  </data>
  <data name="ConfirmRecharge_EmailBody" xml:space="preserve">
    <value>ID: {0}&lt;br&gt;Date of Credit Added: {1:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Amount Added: {2}&lt;br&gt;Balance: {3}&lt;br&gt;&lt;br&gt;&lt;a href="{4}"&gt;&lt;img src="{5}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ConfirmTicketPayment_EmailBody" xml:space="preserve">
    <value>ID: {0}&lt;br&gt;Ticket Number: {1}&lt;br&gt;License Plate: {2}&lt;br&gt;City: {3}&lt;br&gt;Date of Cancelation: {4:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Description: {5}&lt;br&gt;Amount Paid: {6}&lt;br&gt;{7}&lt;br&gt;&lt;br&gt;&lt;a href="{8}"&gt;&lt;img src="{9}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ConfirmTicketPayment_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Fine paid</value>
  </data>
  <data name="ForgetUsername_EmailHeader" xml:space="preserve">
    <value>Forget your username for EYSAMobile? </value>
  </data>
  <data name="ForgeUsername_EmailBody" xml:space="preserve">
    <value>As requested, we are sending you your username for EYSAMobile. &lt;br&gt;Password: {0}&lt;br&gt;&lt;br&gt;The EYSAMobile team  </value>
  </data>
  <data name="ForgotPassword_EmailBody" xml:space="preserve">
    <value> Get your password by pressing  &lt;a href="{0}"&gt;{1}&lt;/a&gt; once you have received an SMS.  &lt;br&gt;&lt;br&gt;&lt;br&gt;The EYSAMobile team</value>
  </data>
  <data name="ForgotPassword_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Password Recovery</value>
  </data>
  <data name="ForgotPassword_SMS" xml:space="preserve">
    <value>This is a message from EYSAMobile. The code to recover your password is {0}.</value>
  </data>
  <data name="Confirm_EmailBody_Balance" xml:space="preserve">
    <value>Balance:</value>
  </data>
  <data name="ExternalTicket_EmailBody" xml:space="preserve">
    <value>Ticket Number: {0}&lt;br&gt;License Plate: {1}&lt;br&gt;City: {2}&lt;br&gt;Date: {3:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Description: {4}&lt;br&gt;Amount to be paid: {5}&lt;br&gt;&lt;br&gt;&lt;a href="{6}"&gt;&lt;img src="{7}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ExternalTicket_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: {0} has a ticket with number {1}</value>
  </data>
  <data name="Activation_EmailBody" xml:space="preserve">
    <value>Continue the registration by pressing  &lt;a href="{0}"&gt;{1}&lt;/a&gt; once the SMS has been received.  &lt;br&gt;&lt;br&gt;&lt;br&gt; the EYSAMobile team</value>
  </data>
  <data name="Activation_EmailHeader" xml:space="preserve">
    <value>EYSAMobile registration</value>
  </data>
  <data name="Activation_SMS" xml:space="preserve">
    <value>This is a message from EYSAMobile. Check your e-mail to continue signing up your new User. Your activation code is {0}.</value>
  </data>
  <data name="CustomerInscriptionModel_SummaryWelcomeEmail_Body" xml:space="preserve">
    <value>&lt;!DOCTYPE html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /&gt;
&lt;link rel="stylesheet" href="{0}Content/CSS/reset.css" type="text/css"&gt;
&lt;link rel="stylesheet" href="{0}Content/CSS/estiloWelcome.css" type="text/css"&gt;
&lt;link href='http://fonts.googleapis.com/css?family=Maven+Pro:400,500' rel='stylesheet' type='text/css'&gt;
&lt;link rel="stylesheet" href="{0}Content/CSS/operations.css" type="text/css"&gt;
&lt;title&gt;welcome&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id="cuerpo"&gt;
  &lt;div id="header"&gt;&amp;nbsp;&lt;/div&gt;
 &lt;div class="div100-center"&gt;
   &lt;h1&gt;&lt;b&gt; {1}, welcome! &lt;/h1&gt; 
 &lt;/div&gt;
   &lt;div id="formulario"&gt;
   &lt;h2&gt;&lt;b&gt;&lt;/font&gt;Congratulations, your account has been successfully created with the following login information:&lt;/h2&gt;
   &lt;p&gt;&amp;nbsp;&lt;/p&gt;
   &lt;div class="div150-center"&gt;
    &lt;p&gt;User: {2}&lt;/p&gt;
&lt;/div&gt;  
 &lt;p&gt;&amp;nbsp;&lt;/p&gt;
 &lt;div class="div80-center"&gt;
&lt;p&gt;Now you can Access your account and recharge your wallet to use the service:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/div&gt;
 &lt;div class="div50-right"&gt;
 &lt;button type="button" class="botonGrande" onclick="#"&gt;Login&lt;/button&gt;&lt;br/&gt;
 &lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt; 
    &lt;div class="greyhr"&gt;&lt;hr /&gt;&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
 &lt;div class="div80-center"&gt; 
&lt;p&gt;&lt;span style="color:#000;font-weight:bold"&gt;Remember the benefits of being a prepay user:&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="div100-center"&gt;   
&lt;ul&gt;
&lt;Li&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/Li&gt;
&lt;li&gt;&lt;img src="{0}Content/img/ok.jpg" width="18px" height="11px" style="vertical-align:baseline"/&gt;Refund of the unused time.&lt;/li&gt;
&lt;li&gt;&lt;img src="{0}Content/img/ok.jpg" width="18px" height="11px" style="vertical-align:baseline"/&gt; Recharge automatically and save time.&lt;/li&gt;
&lt;li&gt;&lt;img src="{0}Content/img/ok.jpg" width="18px" height="11px" style="vertical-align:baseline"/&gt; Online access to your operations and invoices.&lt;/li&gt;
&lt;li&gt;&lt;img src="{0}Content/img/ok.jpg" width="18px" height="11px" style="vertical-align:baseline"/&gt;Alarms before your parking is over.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt; 
&lt;/div&gt;
&lt;div class="Slogan"&gt; 
&lt;p&gt;Remember that now you have a meter in your hand. Enjoy Your Parking!&lt;/p&gt;
&lt;p&gt;&lt;span style="color:#333; font-family: Arial, sans-serif;"&gt;the EYSAMobile Team&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="CustomerInscriptionModel_SummaryWelcomeEmail_Subject" xml:space="preserve">
    <value>Bienvenido a EYSAMobile</value>
  </data>
  <data name="ConfirmUnParking_EmailBody" xml:space="preserve">
    <value>ID: {0}&lt;br&gt;License Plate: {1}&lt;br&gt;City: {2}&lt;br&gt;Date: {3:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Parking Started:  {4:HH:mm:ss dd/MM/yyyy}&lt;br&gt;&lt;b&gt;Parking Ends:  {5:HH:mm:ss dd/MM/yyyy}&lt;/b&gt;&lt;br&gt;Amount Refunded: {6}&lt;br&gt;{7}&lt;br&gt;&lt;br&gt;&lt;a href="{8}"&gt;&lt;img src="{9}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ConfirmUnParking_EmailHeader" xml:space="preserve">
    <value>EYSAMobile: Vehicle Unparked</value>
  </data>
  <data name="ExternalTicketNotPayable_EmailBody" xml:space="preserve">
    <value>Ticket Number: {0}&lt;br&gt;License Plate: {1}&lt;br&gt;City: {2}&lt;br&gt;Date: {3:HH:mm:ss dd/MM/yyyy}&lt;br&gt;Description: {4}&lt;br&gt;FINE NOT PAYABLE&lt;br&gt;&lt;br&gt;&lt;a href="{5}"&gt;&lt;img src="{6}" border="0"&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;</value>
  </data>
  <data name="ConfirmOffstreet_EmailBody_Balance" xml:space="preserve">
    <value>&lt;tr&gt;
	&lt;td colspan="2" class="label" style="padding: 10px 5px; white-space: nowrap; vertical-align: baseline; border-bottom: 1px solid #ccc; font-style: italic; color: #999; font-size: 10pt;"&gt;Solde&lt;/td&gt;
	&lt;td width="5%" class="label" style="padding: 10px 5px; white-space: nowrap; vertical-align: baseline; border-bottom: 1px solid #ccc; font-style: italic; color: #999; font-size: 10pt;"&gt;&amp;nbsp;&lt;/td&gt;
	&lt;td colspan="2" class="money data empha" style="text-align: right; padding: 10px 5px; white-space: nowrap; vertical-align: baseline; border-bottom: 2px solid #ccc; color: #004f7c; font-size: 12pt; text-align: center; font-size: 14pt; font-weight: bold;"&gt;{0}&lt;/td&gt;
&lt;/tr&gt;</value>
  </data>
</root>